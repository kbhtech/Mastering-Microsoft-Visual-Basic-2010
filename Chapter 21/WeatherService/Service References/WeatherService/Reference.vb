'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.20506.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace WeatherService
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://www.webservicex.net", ConfigurationName:="WeatherService.WeatherForecastSoap")>  _
    Public Interface WeatherForecastSoap
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.webservicex.net/GetWeatherByZipCode", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute()>  _
        Function GetWeatherByZipCode(ByVal ZipCode As String) As WeatherService.WeatherForecasts
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.webservicex.net/GetWeatherByPlaceName", ReplyAction:="*"),  _
         System.ServiceModel.XmlSerializerFormatAttribute()>  _
        Function GetWeatherByPlaceName(ByVal PlaceName As String) As WeatherService.WeatherForecasts
    End Interface
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.20506.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.webservicex.net")>  _
    Partial Public Class WeatherForecasts
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private latitudeField As Single
        
        Private longitudeField As Single
        
        Private allocationFactorField As Single
        
        Private fipsCodeField As String
        
        Private placeNameField As String
        
        Private stateCodeField As String
        
        Private statusField As String
        
        Private detailsField() As WeatherData
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Latitude() As Single
            Get
                Return Me.latitudeField
            End Get
            Set
                Me.latitudeField = value
                Me.RaisePropertyChanged("Latitude")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property Longitude() As Single
            Get
                Return Me.longitudeField
            End Get
            Set
                Me.longitudeField = value
                Me.RaisePropertyChanged("Longitude")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property AllocationFactor() As Single
            Get
                Return Me.allocationFactorField
            End Get
            Set
                Me.allocationFactorField = value
                Me.RaisePropertyChanged("AllocationFactor")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property FipsCode() As String
            Get
                Return Me.fipsCodeField
            End Get
            Set
                Me.fipsCodeField = value
                Me.RaisePropertyChanged("FipsCode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property PlaceName() As String
            Get
                Return Me.placeNameField
            End Get
            Set
                Me.placeNameField = value
                Me.RaisePropertyChanged("PlaceName")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property StateCode() As String
            Get
                Return Me.stateCodeField
            End Get
            Set
                Me.stateCodeField = value
                Me.RaisePropertyChanged("StateCode")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=6)>  _
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
                Me.RaisePropertyChanged("Status")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(Order:=7),  _
         System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)>  _
        Public Property Details() As WeatherData()
            Get
                Return Me.detailsField
            End Get
            Set
                Me.detailsField = value
                Me.RaisePropertyChanged("Details")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.20506.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.webservicex.net")>  _
    Partial Public Class WeatherData
        Inherits Object
        Implements System.ComponentModel.INotifyPropertyChanged
        
        Private dayField As String
        
        Private weatherImageField As String
        
        Private maxTemperatureFField As String
        
        Private minTemperatureFField As String
        
        Private maxTemperatureCField As String
        
        Private minTemperatureCField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=0)>  _
        Public Property Day() As String
            Get
                Return Me.dayField
            End Get
            Set
                Me.dayField = value
                Me.RaisePropertyChanged("Day")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=1)>  _
        Public Property WeatherImage() As String
            Get
                Return Me.weatherImageField
            End Get
            Set
                Me.weatherImageField = value
                Me.RaisePropertyChanged("WeatherImage")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=2)>  _
        Public Property MaxTemperatureF() As String
            Get
                Return Me.maxTemperatureFField
            End Get
            Set
                Me.maxTemperatureFField = value
                Me.RaisePropertyChanged("MaxTemperatureF")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=3)>  _
        Public Property MinTemperatureF() As String
            Get
                Return Me.minTemperatureFField
            End Get
            Set
                Me.minTemperatureFField = value
                Me.RaisePropertyChanged("MinTemperatureF")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=4)>  _
        Public Property MaxTemperatureC() As String
            Get
                Return Me.maxTemperatureCField
            End Get
            Set
                Me.maxTemperatureCField = value
                Me.RaisePropertyChanged("MaxTemperatureC")
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(Order:=5)>  _
        Public Property MinTemperatureC() As String
            Get
                Return Me.minTemperatureCField
            End Get
            Set
                Me.minTemperatureCField = value
                Me.RaisePropertyChanged("MinTemperatureC")
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface WeatherForecastSoapChannel
        Inherits WeatherService.WeatherForecastSoap, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class WeatherForecastSoapClient
        Inherits System.ServiceModel.ClientBase(Of WeatherService.WeatherForecastSoap)
        Implements WeatherService.WeatherForecastSoap
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function GetWeatherByZipCode(ByVal ZipCode As String) As WeatherService.WeatherForecasts Implements WeatherService.WeatherForecastSoap.GetWeatherByZipCode
            Return MyBase.Channel.GetWeatherByZipCode(ZipCode)
        End Function
        
        Public Function GetWeatherByPlaceName(ByVal PlaceName As String) As WeatherService.WeatherForecasts Implements WeatherService.WeatherForecastSoap.GetWeatherByPlaceName
            Return MyBase.Channel.GetWeatherByPlaceName(PlaceName)
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://www.webservicex.net", ConfigurationName:="WeatherService.WeatherForecastHttpGet")>  _
    Public Interface WeatherForecastHttpGet
        
        'CODEGEN: Generating message contract since the operation GetWeatherByZipCode is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.webservicex.net/WeatherForecastHttpGet/GetWeatherByZipCodeRequest", ReplyAction:="http://www.webservicex.net/WeatherForecastHttpGet/GetWeatherByZipCodeResponse"),  _
         System.ServiceModel.XmlSerializerFormatAttribute()>  _
        Function GetWeatherByZipCode(ByVal request As WeatherService.GetWeatherByZipCodeRequest) As WeatherService.GetWeatherByZipCodeResponse
        
        'CODEGEN: Generating message contract since the operation GetWeatherByPlaceName is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.webservicex.net/WeatherForecastHttpGet/GetWeatherByPlaceNameRequest", ReplyAction:="http://www.webservicex.net/WeatherForecastHttpGet/GetWeatherByPlaceNameResponse"),  _
         System.ServiceModel.XmlSerializerFormatAttribute()>  _
        Function GetWeatherByPlaceName(ByVal request As WeatherService.GetWeatherByPlaceNameRequest) As WeatherService.GetWeatherByPlaceNameResponse
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetWeatherByZipCodeRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public ZipCode As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ZipCode As String)
            MyBase.New
            Me.ZipCode = ZipCode
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetWeatherByZipCodeResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://www.webservicex.net", Order:=0)>  _
        Public WeatherForecasts As WeatherService.WeatherForecasts
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal WeatherForecasts As WeatherService.WeatherForecasts)
            MyBase.New
            Me.WeatherForecasts = WeatherForecasts
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetWeatherByPlaceNameRequest
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public PlaceName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PlaceName As String)
            MyBase.New
            Me.PlaceName = PlaceName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetWeatherByPlaceNameResponse
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://www.webservicex.net", Order:=0)>  _
        Public WeatherForecasts As WeatherService.WeatherForecasts
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal WeatherForecasts As WeatherService.WeatherForecasts)
            MyBase.New
            Me.WeatherForecasts = WeatherForecasts
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface WeatherForecastHttpGetChannel
        Inherits WeatherService.WeatherForecastHttpGet, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class WeatherForecastHttpGetClient
        Inherits System.ServiceModel.ClientBase(Of WeatherService.WeatherForecastHttpGet)
        Implements WeatherService.WeatherForecastHttpGet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function WeatherService_WeatherForecastHttpGet_GetWeatherByZipCode(ByVal request As WeatherService.GetWeatherByZipCodeRequest) As WeatherService.GetWeatherByZipCodeResponse Implements WeatherService.WeatherForecastHttpGet.GetWeatherByZipCode
            Return MyBase.Channel.GetWeatherByZipCode(request)
        End Function
        
        Public Function GetWeatherByZipCode(ByVal ZipCode As String) As WeatherService.WeatherForecasts
            Dim inValue As WeatherService.GetWeatherByZipCodeRequest = New WeatherService.GetWeatherByZipCodeRequest()
            inValue.ZipCode = ZipCode
            Dim retVal As WeatherService.GetWeatherByZipCodeResponse = CType(Me,WeatherService.WeatherForecastHttpGet).GetWeatherByZipCode(inValue)
            Return retVal.WeatherForecasts
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function WeatherService_WeatherForecastHttpGet_GetWeatherByPlaceName(ByVal request As WeatherService.GetWeatherByPlaceNameRequest) As WeatherService.GetWeatherByPlaceNameResponse Implements WeatherService.WeatherForecastHttpGet.GetWeatherByPlaceName
            Return MyBase.Channel.GetWeatherByPlaceName(request)
        End Function
        
        Public Function GetWeatherByPlaceName(ByVal PlaceName As String) As WeatherService.WeatherForecasts
            Dim inValue As WeatherService.GetWeatherByPlaceNameRequest = New WeatherService.GetWeatherByPlaceNameRequest()
            inValue.PlaceName = PlaceName
            Dim retVal As WeatherService.GetWeatherByPlaceNameResponse = CType(Me,WeatherService.WeatherForecastHttpGet).GetWeatherByPlaceName(inValue)
            Return retVal.WeatherForecasts
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute([Namespace]:="http://www.webservicex.net", ConfigurationName:="WeatherService.WeatherForecastHttpPost")>  _
    Public Interface WeatherForecastHttpPost
        
        'CODEGEN: Generating message contract since the operation GetWeatherByZipCode is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.webservicex.net/WeatherForecastHttpPost/GetWeatherByZipCodeRequest", ReplyAction:="http://www.webservicex.net/WeatherForecastHttpPost/GetWeatherByZipCodeResponse"),  _
         System.ServiceModel.XmlSerializerFormatAttribute()>  _
        Function GetWeatherByZipCode(ByVal request As WeatherService.GetWeatherByZipCodeRequest1) As WeatherService.GetWeatherByZipCodeResponse1
        
        'CODEGEN: Generating message contract since the operation GetWeatherByPlaceName is neither RPC nor document wrapped.
        <System.ServiceModel.OperationContractAttribute(Action:="http://www.webservicex.net/WeatherForecastHttpPost/GetWeatherByPlaceNameRequest", ReplyAction:="http://www.webservicex.net/WeatherForecastHttpPost/GetWeatherByPlaceNameResponse"),  _
         System.ServiceModel.XmlSerializerFormatAttribute()>  _
        Function GetWeatherByPlaceName(ByVal request As WeatherService.GetWeatherByPlaceNameRequest1) As WeatherService.GetWeatherByPlaceNameResponse1
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetWeatherByZipCodeRequest1
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public ZipCode As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal ZipCode As String)
            MyBase.New
            Me.ZipCode = ZipCode
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetWeatherByZipCodeResponse1
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://www.webservicex.net", Order:=0)>  _
        Public WeatherForecasts As WeatherService.WeatherForecasts
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal WeatherForecasts As WeatherService.WeatherForecasts)
            MyBase.New
            Me.WeatherForecasts = WeatherForecasts
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetWeatherByPlaceNameRequest1
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="", Order:=0)>  _
        Public PlaceName As String
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal PlaceName As String)
            MyBase.New
            Me.PlaceName = PlaceName
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.MessageContractAttribute(IsWrapped:=false)>  _
    Partial Public Class GetWeatherByPlaceNameResponse1
        
        <System.ServiceModel.MessageBodyMemberAttribute([Namespace]:="http://www.webservicex.net", Order:=0)>  _
        Public WeatherForecasts As WeatherService.WeatherForecasts
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal WeatherForecasts As WeatherService.WeatherForecasts)
            MyBase.New
            Me.WeatherForecasts = WeatherForecasts
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface WeatherForecastHttpPostChannel
        Inherits WeatherService.WeatherForecastHttpPost, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class WeatherForecastHttpPostClient
        Inherits System.ServiceModel.ClientBase(Of WeatherService.WeatherForecastHttpPost)
        Implements WeatherService.WeatherForecastHttpPost
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function WeatherService_WeatherForecastHttpPost_GetWeatherByZipCode(ByVal request As WeatherService.GetWeatherByZipCodeRequest1) As WeatherService.GetWeatherByZipCodeResponse1 Implements WeatherService.WeatherForecastHttpPost.GetWeatherByZipCode
            Return MyBase.Channel.GetWeatherByZipCode(request)
        End Function
        
        Public Function GetWeatherByZipCode(ByVal ZipCode As String) As WeatherService.WeatherForecasts
            Dim inValue As WeatherService.GetWeatherByZipCodeRequest1 = New WeatherService.GetWeatherByZipCodeRequest1()
            inValue.ZipCode = ZipCode
            Dim retVal As WeatherService.GetWeatherByZipCodeResponse1 = CType(Me,WeatherService.WeatherForecastHttpPost).GetWeatherByZipCode(inValue)
            Return retVal.WeatherForecasts
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Function WeatherService_WeatherForecastHttpPost_GetWeatherByPlaceName(ByVal request As WeatherService.GetWeatherByPlaceNameRequest1) As WeatherService.GetWeatherByPlaceNameResponse1 Implements WeatherService.WeatherForecastHttpPost.GetWeatherByPlaceName
            Return MyBase.Channel.GetWeatherByPlaceName(request)
        End Function
        
        Public Function GetWeatherByPlaceName(ByVal PlaceName As String) As WeatherService.WeatherForecasts
            Dim inValue As WeatherService.GetWeatherByPlaceNameRequest1 = New WeatherService.GetWeatherByPlaceNameRequest1()
            inValue.PlaceName = PlaceName
            Dim retVal As WeatherService.GetWeatherByPlaceNameResponse1 = CType(Me,WeatherService.WeatherForecastHttpPost).GetWeatherByPlaceName(inValue)
            Return retVal.WeatherForecasts
        End Function
    End Class
End Namespace
